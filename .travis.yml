language: python

matrix:
  # Launch a separate build for each Python version 
  include:
    - python: 3.6
    - python: 3.7
    
#env:
#  - CONDA_PYTHON=3.6
#  - CONDA_PYTHON=3.7
  
os:
  - linux
#  - windows
  - osx
  
before_install:
  # Install the latest version of Miniconda + maybe pop black in here to 
  
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then MINICONDA_OS=Linux; else MINICONDA_OS=MacOSX; fi
  - wget https://repo.anaconda.com/miniconda/Miniconda3-latest-$MINICONDA_OS-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -b -p "$HOME"/miniconda
  - source "$HOME"/miniconda/etc/profile.d/conda.sh
  - conda config --set always_yes yes --set changeps1 no --set auto_update_conda false --set notify_outdated_conda false
  - conda install -c defaults conda-build
  - conda info -a
  - printenv | sort

install:
  # You can add any CONDA channels you may need here. CONDA supports
  # both the commands add and append. The only difference is that 
  # the add command places the channel at the front of the priority 
  # list, while append does the opposite.
  - conda config --add channels conda-forge

  # Build the conda recipe for this package
  - conda build -q conda-recipe --python=$TRAVIS_PYTHON_VERSION --output-folder bld-dir
  # Add the built package as a channel with highest priority
  #- conda config --add channels "file://`pwd`/bld-dir"

  # Create and activate the test environment
  - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION pkg_name --file dev-requirements.txt
  - source activate test-environment
  
#script:
  # Run any test suite you may have
#  - py.test -v

#after_success:
  ## Install the command line API for CONDA uploads
  #- conda install anaconda-client
  #- |
  #  # Only upload builds from tags
  #  if [[ $TRAVIS_PULL_REQUEST == false && $TRAVIS_REPO_SLUG == "org/pkgname"
  #        && $TRAVIS_BRANCH == $TRAVIS_TAG  && $TRAVIS_TAG != '' ]]; then
  #    export ANACONDA_API_TOKEN=$CONDA_UPLOAD_TOKEN
  #    anaconda upload bld-dir/**/PACKAGENAME-*.tar.bz2
  #  fi
